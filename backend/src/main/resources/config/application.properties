#
# This properties file contains common configuration across *all* environments
#

# Ports
server.port=8443
server.http.port=1082

# Enable compression (off by default!)
server.compression.enabled=true
server.compression.mime-types=application/javascript,text/javascript,text/css,text/html,text/plain
server.compression.min-response-size=1024

async.corePoolSize=2
async.maxPoolSize=50
async.queueCapacity=10001

spring.application.name=db-web-ui
server.servlet.context-path=/db-web-ui


server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

# enable HTTP/2
server.http2.enabled=true

# Logging
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.net.ripe.whois=INFO

# Jetty request logs
### This property *MUST* contain the date in the yyyy_MM_dd format, it works as a placeholder.
### To change how it will be displayed, change the jetty.accesslog.file-date-format property.
jetty.accesslog.filename=var/logs/jetty/requestlog.yyyy_MM_dd
jetty.accesslog.file-date-format=yyyy-MM-dd
jetty.accesslog.retention-period=14

server.servlet.session.cookie.name = DBSESSIONID

#Pause after marking health status as Disabled so not to lose any requests
shutdown.pause.sec=10

# Enable graceful shutdown
server.shutdown=graceful

# Allow grace timeout period for 20 seconds for live requests to finish
spring.lifecycle.timeout-per-shutdown-phase=20s

spring.config.use-legacy-processing=true
spring.config.on-not-found=ignore

#rate limiting properties
bucket4j.enabled=true
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].url=.*
bucket4j.filters[0].http-response-body="{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
bucket4j.filters[0].rate-limits[0].cache-key=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].execute-condition=@rateLimitConditionService.applyRateLimit(getRemoteAddr())
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=50
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=seconds
bucket4j.filters[0].metrics.enabled=false

#session check period (3600000 = 1 hour)
sso.session.ttl.ms=3600000

# polling interval to get notifications on frontend
notification.polling.ms=300000

# disable management endpoints over HTTP
management.server.port=-1
management.endpoints.web.exposure.exclude=*
