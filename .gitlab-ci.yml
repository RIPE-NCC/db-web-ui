image: $CI_REGISTRY/swe-database-team/gitlab-ci/whois-build:be48cbf8

variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  WHITESOURCE_PRODUCT: "database-team"
  WHITESOURCE_PROJECT: "db-web-ui"
  PROJECT_NAME: "db-web-ui"
  ARTIFACT_NAME: "db-web-ui"
  ARTIFACT_DIR: "backend"

include:
    - project: 'swe/gitlab-ci'
      file: '/templates/whitesource-scanning.yml'
    #- project: 'swe-database-team/gitlab-ci'
    #  file: '/templates/deployment-template.yml'

    - project: 'swe-database-team/gitlab-ci'
      file: '/templates/release-template.yml'


stages:
  - build
  - test
  - release
  - deploy
  - browserstack

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - frontend/node_modules/
    - frontend/package-lock.json
    - .m2/repository

build:
  tags:
    - whois
  stage: build
  before_script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - mvn $MAVEN_OPTS $MAVEN_CLI_OPTS clean package -DskipTests -Dversion=${CI_COMMIT_SHA} -Prelease
    - docker tag db-web-ui:${CI_COMMIT_SHA} $CI_REGISTRY_IMAGE/db-web-ui:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/db-web-ui:${CI_COMMIT_SHORT_SHA}
  artifacts:
    paths:
      - backend/target/db-web-ui*.jar

e2e:
    tags:
      - whois
    stage: test
    script:
        - echo "127.0.0.1 localhost.ripe.net" >> /etc/hosts
        - export DISPLAY=:20
        - Xvfb :20 -screen 0 1920x1080x16 &
        # use pinned version of Chrome:
        - cd frontend && npm run e2e-chrome

e2e-firefox:
    tags:
      - whois
    stage: test
    script:
      - echo "127.0.0.1 localhost.ripe.net" >> /etc/hosts
      - export DISPLAY=:20
      - Xvfb :20 -screen 0 1920x1080x16 &
      - cd frontend && npm run e2e-firefox

qa:
  stage: test
  script:
    - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectVersion=$CI_COMMIT_SHORT_SHA -Dsonar.projectKey=db-web-ui -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_TOKEN}
  allow_failure: true
  artifacts:
    reports:
      junit:
        - backend/target/surefire-reports/TEST-*.xml
        - backend/target/failsafe-reports/TEST-*.xml

release:
    stage: release
    rules:
        - if: '$CI_COMMIT_TAG'
          when: always
        - when: manual
          allow_failure: false
    script:
        - if [ "$CI_COMMIT_TAG" ]; then NEW_VERSION="$CI_COMMIT_SHORT_SHA"; else NEW_VERSION="$CI_COMMIT_SHORT_SHA-SNAPSHOT"; fi
        - mvn versions:set -DnewVersion=$NEW_VERSION
        - mvn -DskipTests -DskipITs -Prelease deploy
    extends: .release_template

browserstack:
    stage: browserstack
    script:
        - cd backend && mvn verify -Dbrowserstack_key=${BROWSERSTACK_KEY} -Dversion=${CI_COMMIT_SHORT_SHA} -Pselenium
    needs:
        - deploy_prod
    only:
        - tags
    artifacts:
        paths:
            - backend/target/db-web-ui*.jar


.deploy_template: &deploy_env
    stage: deploy
    before_script:
        - mkdir -p /root/.ssh
        - touch /root/.ssh/known_hosts
        - ssh-keyscan hanwoo.ripe.net 2>&1 >>/root/.ssh/known_hosts
        - echo "search ripe.net">>/etc/resolv.conf
        - eval $(ssh-agent -s)
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\nAddressFamily inet\n\n" > ~/.ssh/config
        - echo "$DBASE_SSH_KEY" | tr -d '\r' | ssh-add -
    script:
        - git clone http://dbase:$DB_OPERATIONAL_DEPLOY_TOKEN@gitlab.ripe.net/swe-database-team/db-operational.git
        - if [ "$CI_COMMIT_TAG" ]; then NEW_VERSION="$CI_COMMIT_SHORT_SHA"; else NEW_VERSION="$CI_COMMIT_SHORT_SHA-SNAPSHOT"; fi
        - mvn org.apache.maven.plugins:maven-dependency-plugin:3.0.1:copy -Dartifact=net.ripe.db:whois-db:$NEW_VERSION:jar -DoutputDirectory=target/
        - find target -name $ARTIFACT_NAME-$NEW_VERSION.jar -exec cp {} db-operational/deployment/$ARTIFACT_NAME-$CI_COMMIT_SHORT_SHA.jar \;
        - cd db-operational/deployment
        - ./stage.sh -p $PROJECT_NAME -e $CI_ENVIRONMENT_NAME $ARTIFACT_NAME-$CI_COMMIT_SHORT_SHA.jar
        - ./sync.sh -p $PROJECT_NAME -e $CI_ENVIRONMENT_NAME
        - bash ./deploy.sh -p $PROJECT_NAME -e $CI_ENVIRONMENT_NAME

deploy_dev:
    <<: *deploy_env
    environment:
        name: dev
    when: manual

