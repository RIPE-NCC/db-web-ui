image: $CI_REGISTRY/swe-database-team/gitlab-ci/whois-build:6d4ffc23

variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  PROJECT_NAME: "db-web-ui"
  ARTIFACT_NAME: "db-web-ui"
  ARTIFACT_DIR: "backend"
  GROUP_ID: "net.ripe.whois"
  CYPRESS_CACHE_FOLDER: "./cache/Cypress"

include:
    - project: 'swe-database-team/gitlab-ci'
      file: '/templates/release-template.yml'
    - project: 'swe-database-team/gitlab-ci'
      file: '/templates/deployment-template.yml'
    - project: 'swe-database-team/gitlab-ci'
      file: '/templates/deployment-salt-template.yml'

stages:
  - build
  - test
  - release
  - deploy
  - browserstack

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - frontend/node_modules/
    - frontend/package-lock.json
    - .m2/repository
    - frontend/cache/Cypress/

build:
  tags:
    - whois
  stage: build
  script:
    - mvn $MAVEN_OPTS $MAVEN_CLI_OPTS clean package -DskipTests -Dversion=${CI_COMMIT_SHA}
  artifacts:
    paths:
      - backend/target/db-web-ui*.jar

backend:
    tags:
      - whois
    stage: test
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            when: always
        -   if: '$CI_COMMIT_REF_NAME == "master"'
            when: always
        -   when: manual
            allow_failure: true
    script:
      - cd backend && mvn test
    artifacts:
      reports:
        junit:
          - backend/target/surefire-reports/TEST-*.xml
          - backend/target/failsafe-reports/TEST-*.xml

e2e:
    tags:
      - whois
    stage: test
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            when: always
        -   if: '$CI_COMMIT_REF_NAME == "master"'
            when: always
        -   when: manual
            allow_failure: true
    script:
        - echo "127.0.0.1 localhost.ripe.net" >> /etc/hosts
        - export DISPLAY=:20
        - Xvfb :20 -screen 0 1920x1080x16 &
        # use pinned version of Chrome:
        - cd frontend && npm run e2e-chrome

e2e-firefox:
    tags:
      - whois
    stage: test
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            when: always
        -   if: '$CI_COMMIT_REF_NAME == "master"'
            when: always
        -   when: manual
            allow_failure: true
    script:
      - echo "127.0.0.1 localhost.ripe.net" >> /etc/hosts
      - export DISPLAY=:20
      - Xvfb :20 -screen 0 1920x1080x16 &
      - cd frontend && npm run e2e-firefox

e2e-cypress-chrome:
    tags:
        - whois
    stage: test
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            when: always
        -   if: '$CI_COMMIT_REF_NAME == "master"'
            when: always
        -   when: manual
            allow_failure: true
    script:
        - echo "127.0.0.1 localhost.ripe.net" >> /etc/hosts
        - export DISPLAY=:20
        - Xvfb :20 -screen 0 1920x1080x16 &
        - cd frontend && npm run cypress:chrome
    artifacts:
        when: on_failure
        paths:
            - frontend/test/cypress/videos/**/*.mp4
        expire_in: 1 day

e2e-cypress-firefox:
    tags:
        - whois
    stage: test
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            when: always
        -   if: '$CI_COMMIT_REF_NAME == "master"'
            when: always
        -   when: manual
            allow_failure: true
    script:
        - echo "127.0.0.1 localhost.ripe.net" >> /etc/hosts
        - export DISPLAY=:20
        - Xvfb :20 -screen 0 1920x1080x16 &
        - cd frontend && npm run cypress:firefox
    artifacts:
        when: on_failure
        paths:
            - frontend/test/cypress/videos/**/*.mp4
        expire_in: 1 day

qa:
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the SonarQube analysis task
  rules:
      -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: always
      -   if: '$CI_COMMIT_REF_NAME == "master"'
          when: always
      -   when: manual
          allow_failure: true
  script:
    - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectVersion=$CI_COMMIT_SHORT_SHA -Dsonar.projectKey=db-web-ui -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_TOKEN} -DskipTests
  allow_failure: true

release:
    stage: release
    only:
        - tags
    script:
        - if [ "$CI_COMMIT_TAG" ]; then NEW_VERSION="$CI_COMMIT_SHORT_SHA"; else NEW_VERSION="$CI_COMMIT_SHORT_SHA-SNAPSHOT"; fi
        - mvn versions:set -DnewVersion=$NEW_VERSION -Dartifact=$ARTIFACT_NAME
        - mvn -DskipTests -DskipITs -Djar.finalName=$ARTIFACT_NAME-$NEW_VERSION.jar deploy
    extends: .release_template

browserstack:
    stage: browserstack
    script:
        - cd backend && mvn verify -Dbrowserstack_key=${BROWSERSTACK_KEY} -Dversion=${CI_COMMIT_SHORT_SHA} -Pselenium
    needs:
        - deploy_prod
    only:
        - tags
    artifacts:
        paths:
            - backend/target/db-web-ui*.jar

deploy_dev:
  stage: deploy
  only:
    - /^never$/

deploy_prepdev:
  stage: deploy
  only:
    - /^never$/

deploy_salt_prod:
  stage: deploy
  only:
    - /^never$/
